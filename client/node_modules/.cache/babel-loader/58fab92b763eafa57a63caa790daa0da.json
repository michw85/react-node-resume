{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\newProjects\\\\example-create-react-app-express\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { useRoutes } from \"./routes\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { HomePage } from \"./pages/Home\";\nimport { Experience } from './pages/Experience';\nimport { Works } from './pages/Works';\nimport { Contacts } from './pages/Contacts';\nimport { Loader } from \"./components/Loader\";\nimport Footer from './components/Footer';\nimport 'materialize-css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: ''\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/home');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n  }\n\n  routes() {\n    const routes = useRoutes();\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/home\",\n            exact: true,\n            children: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/experience\",\n            component: Experience\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/works\",\n            component: Works\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/contacts\",\n            component: Contacts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/User/newProjects/example-create-react-app-express/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","useRoutes","Navbar","Switch","Route","Redirect","HomePage","Experience","Works","Contacts","Loader","Footer","App","state","response","post","responseToPost","callApi","fetch","body","json","status","Error","message","routes","componentDidMount","then","res","setState","express","catch","err","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;AACA,SAAQC,SAAR,QAAwB,UAAxB;AACA,SAAQC,MAAR,QAAqB,qBAArB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,SAAQC,QAAR,QAAuB,cAAvB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SAAQC,KAAR,QAAoB,eAApB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,MAAR,QAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,iBAAP;AACA,OAAO,sCAAP;AACA,OAAO,WAAP;;;AAGA,MAAMC,GAAN,SAAkBd,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1Be,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,cAAc,EAAE;AAHV,KADkB;;AAAA,SAmB1BC,OAnB0B,GAmBhB,YAAY;AACpB,YAAMH,QAAQ,GAAG,MAAMI,KAAK,CAAC,WAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACA,UAAIN,QAAQ,CAACO,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAE7B,aAAOJ,IAAP;AACD,KAzByB;AAAA;;AAO1BK,EAAAA,MAAM,GAAG;AACP,UAAMA,MAAM,GAAGvB,SAAS,EAAxB;AACD;;AAIDwB,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,OAAL,GACGS,IADH,CACQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEd,MAAAA,QAAQ,EAAEa,GAAG,CAACE;AAAhB,KAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD;;AAWHG,EAAAA,MAAM,GAAG;AAEL,wBACI,QAAC,MAAD;AAAA,8BACM,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADN,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACA,QAAC,MAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,KAAK,MAAzB;AAAA,mCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,aAAZ;AAA0B,YAAA,SAAS,EAAE3B;AAArC;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,SAAS,EAAEC;AAAhC;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,WAAZ;AAAwB,YAAA,SAAS,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBD;;AA9CyB;;AAiD5B,eAAeG,GAAf","sourcesContent":["import React, {Component} from 'react'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {useRoutes} from \"./routes\"\nimport {Navbar} from \"./components/Navbar\"\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport {HomePage} from \"./pages/Home\"\nimport {Experience} from './pages/Experience'\nimport {Works} from './pages/Works'\nimport {Contacts} from './pages/Contacts'\nimport {Loader} from \"./components/Loader\";\nimport Footer from './components/Footer'\nimport 'materialize-css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\n\nclass App extends Component {\n  state = {\n    response: '',\n    post: '',\n    responseToPost: '',\n  };\n  \n  routes (){\n    const routes = useRoutes()\n  }\n\n  \n  \n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n  \n  callApi = async () => {\n    const response = await fetch('/api/home');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    \n    return body;\n  };\n  \n  \nrender() {\n  \n    return (\n        <Router>\n            { <Navbar />}\n            <div className=\"container\">\n            <Switch>\n                <Route path=\"/home\" exact>\n                    <HomePage />\n                </Route>\n                <Route path=\"/experience\" component={Experience} />\n                <Route path=\"/works\" component={Works} />\n                <Route path=\"/contacts\" component={Contacts} />\n                <Redirect to=\"/home\" />\n            </Switch>\n            </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
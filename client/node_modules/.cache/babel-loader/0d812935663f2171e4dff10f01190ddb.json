{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from 'react';\nconst storageName = 'userData';\nexport const useAuth = () => {\n  _s();\n\n  // flags\n  const [token, setToken] = useState(null);\n  const [ready, setReady] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const login = useCallback((jwtToken, id) => {\n    setToken(jwtToken);\n    setUserId(id);\n    localStorage.setItem(storageName, JSON.stringify({\n      userId: id,\n      token: jwtToken\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(storageName);\n  }, []); // check the availability of tokens for loading routes\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(storageName));\n\n    if (data && data.token) {\n      login(data.token, data.userId);\n    } // authorization module worked\n\n\n    setReady(true);\n  }, [login]);\n  return {\n    login,\n    logout,\n    token,\n    userId,\n    ready\n  };\n};\n\n_s(useAuth, \"OqCkJJFnMULUrRV/XJd/Qjh2riU=\");","map":{"version":3,"sources":["C:/Users/User/newProjects/example-create-react-app-express/client/src/hooks/auth.hook.js"],"names":["useState","useCallback","useEffect","storageName","useAuth","token","setToken","ready","setReady","userId","setUserId","login","jwtToken","id","localStorage","setItem","JSON","stringify","logout","removeItem","data","parse","getItem"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,WAAlB,EAA+BC,SAA/B,QAA+C,OAA/C;AAEA,MAAMC,WAAW,GAAG,UAApB;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAMW,KAAK,GAAGV,WAAW,CAAE,CAACW,QAAD,EAAWC,EAAX,KAAkB;AACzCP,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACAF,IAAAA,SAAS,CAACG,EAAD,CAAT;AAEAC,IAAAA,YAAY,CAACC,OAAb,CAAqBZ,WAArB,EAAkCa,IAAI,CAACC,SAAL,CAAgB;AAC9CR,MAAAA,MAAM,EAACI,EADuC;AACnCR,MAAAA,KAAK,EAACO;AAD6B,KAAhB,CAAlC;AAGH,GAPwB,EAOtB,EAPsB,CAAzB;AASA,QAAMM,MAAM,GAAGjB,WAAW,CAAE,MAAM;AAC9BK,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,IAAAA,YAAY,CAACK,UAAb,CAAwBhB,WAAxB;AACH,GAJyB,EAIvB,EAJuB,CAA1B,CAfyB,CAqBzB;;AACAD,EAAAA,SAAS,CAAE,MAAM;AACb,UAAMkB,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqBnB,WAArB,CAAX,CAAb;;AAEA,QAAIiB,IAAI,IAAIA,IAAI,CAACf,KAAjB,EAAwB;AACpBM,MAAAA,KAAK,CAACS,IAAI,CAACf,KAAN,EAAae,IAAI,CAACX,MAAlB,CAAL;AACH,KALY,CAMb;;;AACAD,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GARQ,EAQN,CAACG,KAAD,CARM,CAAT;AAUA,SAAO;AAAEA,IAAAA,KAAF;AAASO,IAAAA,MAAT;AAAiBb,IAAAA,KAAjB;AAAwBI,IAAAA,MAAxB;AAAgCF,IAAAA;AAAhC,GAAP;AACH,CAjCM;;GAAMH,O","sourcesContent":["import {useState, useCallback, useEffect} from 'react'\r\n\r\nconst storageName = 'userData'\r\nexport const useAuth = () => {\r\n    // flags\r\n    const [token, setToken] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const [userId, setUserId] = useState(null)\r\n\r\n    const login = useCallback( (jwtToken, id) => {\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n\r\n        localStorage.setItem(storageName, JSON.stringify( {\r\n            userId:id, token:jwtToken\r\n        }))\r\n    }, [])\r\n\r\n    const logout = useCallback( () => {\r\n        setToken(null)\r\n        setUserId(null)\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    // check the availability of tokens for loading routes\r\n    useEffect( () => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.userId)\r\n        }\r\n        // authorization module worked\r\n        setReady(true)\r\n    }, [login])\r\n\r\n    return { login, logout, token, userId, ready }\r\n}"]},"metadata":{},"sourceType":"module"}
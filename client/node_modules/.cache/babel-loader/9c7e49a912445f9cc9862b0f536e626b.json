{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\newProjects\\\\example-create-react-app-express\\\\client\\\\src\\\\pages\\\\AuthPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHttp } from \"../hooks/http.hook\";\nimport { useMessage } from \"../hooks/message.hooks\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthPage = () => {\n  _s();\n\n  // data from Provider -> auth.hook.js\n  const auth = useContext(AuthContext); // handmade hooks\n\n  const message = useMessage(); // alert from library materialize for errors\n\n  const {\n    loadind,\n    request,\n    error,\n    clearError\n  } = useHttp(); // hook useState for get data from form\n\n  const [form, setForm] = useState({\n    email: '',\n    password: ''\n  }); // hook for tracking errors\n\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]); // hook for update field of form authorization -> materialize\n\n  useEffect(() => {\n    window.M.updateTextFields();\n  }, []);\n\n  const changeHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    }); // Spread syntax\n  }; // server request\n  // registration\n\n\n  const registerHandler = async () => {\n    try {\n      const data = await request('/api/auth/register', 'POST', { ...form\n      });\n      message(data.message);\n      console.log(\"Data\", data);\n    } catch (e) {}\n  }; // login\n\n\n  const loginHandler = async () => {\n    try {\n      const data = await request('/api/auth/login', 'POST', { ...form\n      });\n      auth.login(data.token, data.userId);\n    } catch (e) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row_auth\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col s6 offset-s3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Welcome to the resume site\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card blue-grey darken-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content white-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"card-title\",\n            children: \"Authorization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Enter email\",\n                id: \"email\",\n                type: \"text\",\n                name: \"email\",\n                className: \"grey-input\",\n                value: form.email,\n                onChange: changeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"first_name\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Enter password\",\n                id: \"password\",\n                type: \"password\",\n                name: \"password\",\n                className: \"grey-input\",\n                value: form.password,\n                onChange: changeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"first_name\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-action\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn green darken-3\",\n            style: {\n              marginRight: 10\n            },\n            disabled: loadind,\n            onClick: loginHandler,\n            children: \"Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn grey lighten-1 black-text\",\n            onClick: registerHandler,\n            disabled: loadind,\n            children: \"Registration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthPage, \"Qc0or1q0Mal6ncPwC8Z6GgE8IhI=\", false, function () {\n  return [useMessage, useHttp];\n});\n\n_c = AuthPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"sources":["C:/Users/User/newProjects/example-create-react-app-express/client/src/pages/AuthPage.js"],"names":["React","useContext","useEffect","useState","useHttp","useMessage","AuthContext","AuthPage","auth","message","loadind","request","error","clearError","form","setForm","email","password","window","M","updateTextFields","changeHandler","event","target","name","value","registerHandler","data","console","log","e","loginHandler","login","token","userId","marginRight"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hooks\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const AuthPage = () => {\r\n    // data from Provider -> auth.hook.js\r\n    const auth = useContext(AuthContext)\r\n    // handmade hooks\r\n    const message = useMessage() // alert from library materialize for errors\r\n    const {loadind, request, error, clearError} = useHttp()\r\n    // hook useState for get data from form\r\n    const [form, setForm] = useState( {\r\n        email: '', password: ''\r\n    })\r\n    // hook for tracking errors\r\n    useEffect( () => {\r\n        message(error)\r\n        clearError()\r\n    }, [error, message, clearError])\r\n    // hook for update field of form authorization -> materialize\r\n    useEffect( () => {\r\n        window.M.updateTextFields()\r\n    }, [])\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value }) // Spread syntax\r\n    }\r\n\r\n    // server request\r\n    // registration\r\n    const registerHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/register', 'POST', {...form})\r\n            message(data.message)\r\n            console.log(\"Data\", data)\r\n        } catch (e) {}\r\n    }\r\n    // login\r\n    const loginHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/login', 'POST', {...form})\r\n            auth.login(data.token, data.userId)\r\n        } catch (e) {}\r\n    }\r\n\r\n    return (\r\n        <div className=\"row_auth\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h3>Welcome to the resume site</h3>\r\n                <div className=\"card blue-grey darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Authorization</span>\r\n                        <div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input placeholder=\"Enter email\"\r\n                                       id=\"email\"\r\n                                       type=\"text\"\r\n                                       name=\"email\"\r\n                                       className=\"grey-input\"\r\n                                       value={form.email}\r\n                                       onChange={changeHandler}\r\n                                       />\r\n                                    <label htmlFor=\"first_name\">Email</label>\r\n                            </div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input placeholder=\"Enter password\"\r\n                                       id=\"password\"\r\n                                       type=\"password\"\r\n                                       name=\"password\"\r\n                                       className=\"grey-input\"\r\n                                       value={form.password}\r\n                                       onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"first_name\">Password</label>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button\r\n                            className=\"btn green darken-3\"\r\n                            style={{marginRight:10}}\r\n                            disabled={loadind}\r\n                            onClick={loginHandler}\r\n                        >\r\n                            Enter\r\n                        </button>\r\n                        <button\r\n                            className=\"btn grey lighten-1 black-text\"\r\n                            onClick={registerHandler}\r\n                            disabled={loadind}\r\n                        >\r\n                            Registration\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}